/**
 * @file Firestore Security Rules
 * @description This ruleset configures access control for the GuestEntry data model. It focuses on allowing all read access, and forbidding write access.
 *
 * Data Structure:
 * - /guest_entries/{guestEntryId}: Top-level collection for guest entries.
 *
 * Key Security Decisions:
 * - Guest entries can be read by any authenticated user.
 * - Guest entries cannot be created, updated or deleted through the client.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    /**
     * @description Controls access to the 'guest_entries' collection. Guest entries can be read by any authenticated user, but cannot be created, updated, or deleted by the client.
     * @path /guest_entries/{guestEntryId}
     * @allow (get, list) Any authenticated user can read any guest entry.
     *   Example: A user with UID "user123" can read /guest_entries/entry456.
     * @deny (create, update, delete) No user can create, update, or delete a guest entry through the client.
     *   Example: A user with UID "user123" cannot create a new document under /guest_entries.
     * @principle Allows public read access but restricts write access to prevent unauthorized data modification.
     */
    match /guest_entries/{guestEntryId} {
      // Allow anyone signed in to read
      allow get: if isSignedIn();
      allow list: if isSignedIn();

      // No one should be able to create, update, or delete from the client.
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }

  // Helper function to determine if a user is signed in
  function isSignedIn() {
    return request.auth != null;
  }
}